const { GoogleSpreadsheet } = require('google-spreadsheet');

const {
    createBot,
    createProvider,
    createFlow,
    addKeyword,
    addAnswer,
    EVENTS,
} = require('@bot-whatsapp/bot')

const fs = require('fs');
const RESPONSES_SHEET_ID = 'Credenciales'; // Ingres√° el ID de tu hoja de Sheets
const doc = new GoogleSpreadsheet(RESPONSES_SHEET_ID);
const CREDENTIALS = JSON.parse(fs.readFileSync('./credenciales.json'));
const QRPortalWeb = require('@bot-whatsapp/portal')
const BaileysProvider = require('@bot-whatsapp/provider/baileys')
const MySQLAdapter = require('@bot-whatsapp/database/mysql')

let STATUS = {}

const flowEnvio = addKeyword(['si', 'no', '1', '2']).addAnswer(
    '¬øPreferis enviar el celular o acercarte a nuestro local en Vicente Lopez? üööüõ†Ô∏è\n\n1Ô∏è‚É£ Lo env√≠o\n2Ô∏è‚É£ Me acerco',
    { capture: true },
    async (ctx, { flowDynamic }) => {


        telefono = ctx.from
        if (ctx.body == 1) {

            envio = STATUS[telefono] = { ...STATUS[telefono], envio: 'Lo env√≠a' }
        }

        else if (ctx.body == 2) {

            envio = STATUS[telefono] = { ...STATUS[telefono], envio: 'Se acerca' }
        } else {

            envio = STATUS[telefono] = { ...STATUS[telefono], envio: ctx.body }
        }

        ingresarDatos();
        async function ingresarDatos() {
            console.log(STATUS[telefono].modelo)
            let rows = [{

                Nombre: STATUS[telefono].nombre,
                Apellidos: STATUS[telefono].apellidos,
                Marca: STATUS[telefono].marca,
                Modelo: STATUS[telefono].modelo,
                Problema: STATUS[telefono].problema,
                BuenosAires: STATUS[telefono].localidad,
                Envio: STATUS[telefono].envio,
                Telefono: STATUS[telefono].telefono,

            }];

            await doc.useServiceAccountAuth({
                client_email: CREDENTIALS.client_email,
                private_key: CREDENTIALS.private_key
            });
            await doc.loadInfo();
            let sheet = doc.sheetsByIndex[0];
            for (let index = 0; index < rows.length; index++) {
                const row = rows[index];
                await sheet.addRow(row);
            }
        }
        return flowDynamic('Un placer haber sido de ayuda, en breves se estar√° conectando un agente')
    });

const flowLocalidad = addKeyword(['a', 'e', 'i', 'o', 'u', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9']).addAnswer(
    '¬øVivis en Buenos Aires? üåÜ üåÜ\n\n1Ô∏è‚É£ Si\n2Ô∏è‚É£ No',
    { capture: true },

    async (ctx, { flowDynamic }) => {


        telefono = ctx.from


        if (ctx.body == 1) {
            localidad = STATUS[telefono] = { ...STATUS[telefono], localidad: 'Vive Buenos Aires' };
        } else if (ctx.body == 2) {
            localidad = STATUS[telefono] = { ...STATUS[telefono], localidad: 'Otra localidad' };
        } else {
            localidad = STATUS[telefono] = { ...STATUS[telefono], localidad: ctx.body };
        }



        // if (ctx.body == 1) {

        //     localidad = STATUS[telefono] = { ...STATUS[telefono], localidad: 'Vive Buenos Aires' }
        // }
        // if (ctx.body == 2) {

        //     localidad = STATUS[telefono] = { ...STATUS[telefono], localidad: 'Otra localidad' }

        // } else {
        //     localidad = STATUS[telefono] = { ...STATUS[telefono], localidad: ctx.body };
        // }

        flowDynamic()

    }, [flowEnvio])

const flowModelo = addKeyword(['a', 'e', 'i', 'o', 'u', '1', '2', '3', '4', '5', '6']).addAnswer(
    'Entiendo, y qu√© modelo es? ü§î\n\nüìù Ejemplo: *Galaxy J7*',
    { capture: true },

    async (ctx, { flowDynamic }) => {


        telefono = ctx.from
        modelo = STATUS[telefono] = { ...STATUS[telefono], modelo: ctx.body }


        flowDynamic()
    }, [flowLocalidad])


const flowMarca = addKeyword(['a', 'e', 'i', 'o', 'u']).addAnswer(
    'üìù Escribe el n√∫mero que corresponda a la marca de celular que tienes üì≤ \n\n1Ô∏è‚É£ *Samsung*\n2Ô∏è‚É£ *Motorola*\n3Ô∏è‚É£ *Iphone*\n4Ô∏è‚É£ *Huawei*\n5Ô∏è‚É£ *Xiaomi*\n6Ô∏è‚É£ *Otro*',
    { capture: true },

    async (ctx, { flowDynamic }) => {


        telefono = ctx.from

        if (ctx.body == 1) {

            marca = STATUS[telefono] = { ...STATUS[telefono], marca: 'Samsung' }
        }
        if (ctx.body == 2) {

            marca = STATUS[telefono] = { ...STATUS[telefono], marca: 'Motorola' }
        }
        if (ctx.body == 3) {

            marca = STATUS[telefono] = { ...STATUS[telefono], marca: 'Iphone' }
        }
        if (ctx.body == 4) {

            marca = STATUS[telefono] = { ...STATUS[telefono], marca: 'Huawei' }
        }
        if (ctx.body == 5) {

            marca = STATUS[telefono] = { ...STATUS[telefono], marca: 'Xiaomi' }
        }
        if (ctx.body == 6) {

            marca = STATUS[telefono] = { ...STATUS[telefono], marca: 'Otro' }
        }

        flowDynamic()
    }, [flowModelo])


const flowFormularioSheet2 = addKeyword(['a', 'e', 'i', 'o', 'u']).addAnswer(
    '¬øCu√°l es tu apellido? üìùüë§',
    { capture: true },

    async (ctx, { flowDynamic }) => {


        telefono = ctx.from
        apellidos = STATUS[telefono] = { ...STATUS[telefono], apellidos: ctx.body }

        flowDynamic()
    }, [flowMarca])

const flowFormularioSheet = addKeyword(['si', 'no', '1', '2', 'chip', 'sim', 'cable', 'pin', 'carga', 'coso', 'sucio', 'boton', 'botones', 'id', 'face', 'lector', 'camara', 'zoom', 'audio', 'microfono', 'altavoz', 'altavoces', 'sonido']).addAnswer('Ya casi terminamos ‚úÖ\nLuego de completar los siguientes datos, te va a estar contactando un asesor de la empresa ü´°')

    .addAnswer(
        '¬øCu√°l es tu nombre? üìùüë§',
        { capture: true },

        async (ctx, { flowDynamic }) => {


            telefono = ctx.from
            nombre = STATUS[telefono] = { ...STATUS[telefono], nombre: ctx.body }                //‚û°Ô∏è Variable del STATUS
            telefono = STATUS[telefono] = { ...STATUS[telefono], telefono: ctx.from }

            flowDynamic()
        }, [flowFormularioSheet2])





/////////////////////////////////////////////////////////////////////////////      FIN PROBLEMA        //////////////////////////////////////////////////////////////////////////////////////////////////////    

const flowProblema = addKeyword(['otros', 'Electr√≥nica', 'Carga / Bateria üîã', '3'])

    .addAnswer('Estoy para escucharte y ofrecerte la mejor soluci√≥n posible üí™\n\n¬°Adelante! üëÇüèΩ Contame m√°s detalles sobre el inconveniente que est√°s experimentando!',

        { capture: true },
        async (ctx, { flowDynamic }) => {

            telefono = ctx.from
            problema = STATUS[telefono] = { ...STATUS[telefono], problema: ctx.body }

            flowDynamic()
        }, [flowFormularioSheet])


/////////////////////////////////////////////////////////////////////////////      FIN MOJADO Y GOLPE        //////////////////////////////////////////////////////////////////////////////////////////////////////    


const flowMojado = addKeyword(['1', '2', 'Si', 'No'])

    .addAnswer(
        '¬øPor casualidad, tu celular se moj√≥ recientemente? üåäüí¶\n\n1Ô∏è‚É£ Si\n2Ô∏è‚É£ No', { capture: true }, async (ctx, { fallBack }) => {

            if (ctx.body.includes('si') || ctx.body.includes('no') || ctx.body == 1 || ctx.body == 2) {

            } else {
                return fallBack()
            }
        }, [flowFormularioSheet])


const flowGolpe = addKeyword(['1', '2', '3', 'Tactil mal', 'Sin imagen', 'Imagen c/detalles'])

    .addAnswer(
        'Que lastima escuchar eso üòî\n\n¬øHace poco tu celular sufri√≥ alg√∫n golpe o impacto? Esto nos ayudar√° a entender mejor la situaci√≥n y brindarte la mejor soluci√≥n posible.\n\n1Ô∏è‚É£ Si \n2Ô∏è‚É£ No',

        { capture: true }, async (ctx, { fallBack }) => {

            if (ctx.body.includes('si') || ctx.body.includes('no') || ctx.body == 1 || ctx.body == 2) {

            } else {
                return fallBack()
            }
        }, [flowMojado])


/////////////////////////////////////////////////////////////////////////////      FIN PANTALLA        //////////////////////////////////////////////////////////////////////////////////////////////////////    

const flowPantalla = addKeyword(['Pantalla', '1'])

    .addAnswer(
        '¬°Gracias por la informaci√≥n! üòä\nParece que la falla est√° relacionada con la pantalla, contame como esta: üì±üëÜ:\n\n1Ô∏è‚É£ Astillada\n2Ô∏è‚É£ Verde / Blanca\n\nü§ñ Si la falla no corresponde con ninguna de las opciones, no te preocupes.¬°Simplemente escribe *otros*! Estoy aqu√≠ para escuchar y resolver cualquier problema que puedas tener. üòäüí¨',

        { capture: true },
        async (ctx, { flowDynamic, fallBack }) => {

            telefono = ctx.from
            if (ctx.body == 1) {

                problema = STATUS[telefono] = { ...STATUS[telefono], problema: 'Pantalla astillada' }
            }
            else if (ctx.body == 2) {

                problema = STATUS[telefono] = { ...STATUS[telefono], problema: 'Pantalla verde / blanca' }

            } else {
                return fallBack()
            }


            flowDynamic()
        }, [flowProblema, flowFormularioSheet])



const flowImagen = addKeyword(['Imagen / T√°ctil', '2'])

    .addAnswer(
        '¬°Gracias por la informaci√≥n! üòä\nParece que la falla est√° relacionada con la imagen o el t√°ctil, contame como esta: üì±üëÜ:\n\n1Ô∏è‚É£ Sin imagen\n2Ô∏è‚É£ Imagen c/detalles\n3Ô∏è‚É£ Tactil mal\n\n\nSi la falla no corresponde con ninguna de las opciones anteriores, no te preocupes ¬°Simplemente escribe *otros*! Estoy aqu√≠ para escuchar y resolver cualquier problema que puedas tener. üòäüí¨',

        { capture: true },
        async (ctx, { fallBack, flowDynamic, }) => {

            if (ctx.body == 1) {
                telefono = ctx.from

                problema = STATUS[telefono] = { ...STATUS[telefono], problema: 'Sin imagen' }

            }
            else if (ctx.body == 2) {
                telefono = ctx.from

                problema = STATUS[telefono] = { ...STATUS[telefono], problema: 'Imagen c/detalles' }

            }
            else if (ctx.body == 3) {
                telefono = ctx.from

                problema = STATUS[telefono] = { ...STATUS[telefono], problema: 'Tactil mal' }

            }

            else {
                return fallBack()
            }

            flowDynamic()


        }, [flowGolpe])



//////////////////////////////////////////////////////////////////////      FIN OTRAS        //////////////////////////////////////////////////////////////////////////////////////////////////////    


const flowMatias = addKeyword(['Hablar con Juan', 'Juan', '3'])

    //35 caracteres por renglon
    .addAnswer('Si üòä Aguardame un segundo que le aviso!')


const flowTienda = addKeyword(['redes', '2'])

    //35 caracteres por renglon
    .addAnswer(['üéâ Visita nuestras redes para obtener informaci√≥n detallada sobre nuestra empresa, servicios y mucho m√°s! üåü üîßüì±'])
    .addAnswer('Seguinos! üòâ\n\nüì∑ Instagram: @ReparacionDeCelulares.ok\nüì± Tiktok: @ReparacionDeCelulares01')


const flowCursos = addKeyword(['Cursos', '1'])

    //35 caracteres por renglon
    .addAnswer('üìö ¬°Tenemos varios cursos y capacitaciones disponibles para empresas üíº ! Tanto en formato online como presencial.\n\nSe acerca la fecha de los pr√≥ximos congresos en M√©xico üá≤üáΩ y Uruguay üá∫üáæ! üéìüåü')

    .addAnswer('Seguinos en nuestras redes para ver toda la info! üòâ\n\nüì∑ Instagram: @ReparacionDeCelulares.ok\nüì± Tiktok: @ReparacionDeCelulares01')

//////////////////////////////////////////////////////////////////////      FIN MI CELULAR        //////////////////////////////////////////////////////////////////////////////////////////////////////    


const flowEstadoReparacion = addKeyword(['Estado reparacion', '2'])
    .addAnswer(['üõ†Ô∏è Para ver cual es el estado de la reparaci√≥n de tu celular, tenes que poner el c√≥digo que te dimos en el siguiente link\n\n', 'üîó https://ticketservice.xyz'])

const flowDa√±ado = addKeyword(['Celular da√±ado', '1'])

    //35 caracteres por renglon
    .addAnswer('¬°Entiendo! üòä Voy a hacer esto lo m√°s r√°pido posible. Pero antes, decime en qu√© √°rea est√° el problema?')
    //35 caracteres por renglon
    .addAnswer('¬øEst√° relacionado con la pantalla y el t√°ctil,üì±üëÜ o con la parte electr√≥nica? ‚ö°üîå\n\n1Ô∏è‚É£ Pantalla\n2Ô∏è‚É£ Imagen / T√°ctil\n3Ô∏è‚É£ Electr√≥nica',


        //agregar delay

        { capture: true }, async (ctx, { fallBack }) => {

            if (ctx.body == 1 || ctx.body == 2 || ctx.body == 3) {

            } else {
                return fallBack()
            }
        }, [flowImagen, flowPantalla, flowProblema])



//////////////////////////////////////////////////////////////////////      FIN PRINCIPALES        //////////////////////////////////////////////////////////////////////////////////////////////////////    


const flowOtra = addKeyword(['Otra', '2'])

    //35 caracteres por renglon
    .addAnswer('Estas son algunas de las opciones que puedo ofrecerte üöÄ\n\n1Ô∏è‚É£ Cursos üìö\n2Ô∏è‚É£ Redes üîó\n3Ô∏è‚É£ Hablar con Juan üìû',
        { capture: true }, async (ctx, { fallBack }) => {

            if (ctx.body == 1 || ctx.body == 2 || ctx.body == 3) {

            } else {
                return fallBack()
            }
        }, [flowCursos, flowTienda, flowMatias])

const flowMicelular = addKeyword(['Mi celular', '1'])

    //35 caracteres por renglon
    .addAnswer('Estoy para ayudarte, tu celular tiene alg√∫n problema relacionado con alguno de estos temas? üí¨ \n\n1Ô∏è‚É£ Celular da√±ado\n2Ô∏è‚É£ Estado de mi reparaci√≥n\n3Ô∏è‚É£ Carga / Bater√≠a',

        { capture: true },
        async (ctx, { fallBack }) => {

            if (ctx.body == 1 || ctx.body == 2 || ctx.body == 3) {

            } else {
                return fallBack()
            }
        }, [flowDa√±ado, flowEstadoReparacion, flowProblema])


//////////////////////////////////////////////////////////////////////      FIN BIENVENIDA        //////////////////////////////////////////////////////////////////////////////////////////////////////    


const flowPrincipal = addKeyword([EVENTS.WELCOME, 'xxx'])

    //35 caracteres por renglon
    .addAnswer('Hola! üëã Soy el chatbot de Reparaci√≥n de celulares üì±\nTu lugar de confianza para resolver los problemas de tu celular\n\nüìç Nos ubicamos en Malvinas Argentinas 2245, Local 15, Galer√≠a Pacifico, La Horqueta, Vicente Lopez, CP 1618\n\nüïö Nuestro horario de atenci√≥n es de 10 a 22hs, de Lunes a S√°bado\n\nüòäüíº¬øEn qu√© tipo de consulta puedo ayudarte hoy? \nüí¨ No dudes en compartir tus inquietudes y juntos encontraremos la mejor soluci√≥n para tu dispositivo ¬°Estamos aqu√≠ para asistirte!')


    .addAnswer('‚úçÔ∏è Escrib√≠ el n√∫mero de la opci√≥n que corresponda üîé\n\n1Ô∏è‚É£ Mi celular\n2Ô∏è‚É£ Otra', { capture: true }, (ctx, { fallBack }) => {
        if (ctx.body == 1 || ctx.body == 2) {

        } else {
            return fallBack()
        }
    }, [flowMicelular, flowOtra])


const main = async () => {

    // Nos conectamos a Mysql
    const adapterDB = new MySQLAdapter({
        host: 'Host',
        user: 'UsuarioMYSQL',
        database: 'BaseDeDatos',
        password: 'Contrase√±a base de datos',
        port: '3306',
    })

    const adapterFlow = createFlow([flowPrincipal])
    const adapterProvider = createProvider(BaileysProvider, {
        accountSid: process.env.ACC_SID,
        authToken: process.env.ACC_TOKEN,
        vendorNumber: process.env.ACC_VENDOR,
    })

    createBot({
        flow: adapterFlow,
        provider: adapterProvider,
        database: adapterDB,
    })

    QRPortalWeb()

}

main()
